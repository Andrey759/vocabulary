plugins {
	id 'java'
    id 'maven-publish'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'Andrey759'
version = '0.0.1'
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // spring boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.postgresql:postgresql:42.7.4'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.3'
    //implementation 'com.theokanning.openai-gpt3-java:service:0.18.2'
    implementation 'io.github.sashirestela:simple-openai:3.8.2' exclude group: 'org.slf4j'
    //implementation 'org.telegram:telegrambots-spring-boot-starter:6.9.7.1'
    implementation 'org.telegram:telegrambots-longpolling:7.10.0'
    implementation 'org.telegram:telegrambots-client:7.10.0'
    //implementation 'org.telegram:telegrambots-abilities:7.10.0'

    // annotation processors
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.11.2'
}

bootJar {
    enabled = true
}

jar {
    enabled = false
}

test {
    useJUnitPlatform()
}

task stop {
    group 'vocabulary'
    doLast {
        exec {
            commandLine 'ssh', 'root@185.201.28.190', "systemctl stop vocabulary"
        }
    }
}

task start {
    group 'vocabulary'
    doLast {
        exec {
            commandLine 'ssh', 'root@185.201.28.190', "systemctl start vocabulary"
        }
    }
}

task deploy {
    group 'vocabulary'
    dependsOn 'build'
    doLast {
        exec {
            commandLine 'ssh', 'root@185.201.28.190', "systemctl stop vocabulary"
        }
        exec {
            commandLine 'scp', file('build/libs/vocabulary-0.0.1.jar'), "root@185.201.28.190:/home"
        }
        exec {
            commandLine 'ssh', 'root@185.201.28.190', "systemctl start vocabulary"
        }
    }
}

task backup {
    group 'database'
    def backupFileName = new Date().format('yyyy-MM-dd') + ".sql"
    doLast {
        exec {
            commandLine 'echo', "Backup file name: backups/${backupFileName}"
        }
        exec {
            commandLine 'ssh', 'root@185.201.28.190', "pg_dump -U postgres -h localhost -f /home/backups/${backupFileName} --clean"
        }
        exec {
            commandLine 'scp', "root@185.201.28.190:/home/backups/${backupFileName}", "backups/${backupFileName}"
        }
        exec {
            commandLine 'ssh', 'root@185.201.28.190', "rm /home/backups/${backupFileName}"
        }
    }
}

task restore {
    group 'database'
    def backupFileName = file('./backups').listFiles().max { it.lastModified() }.name
    doLast {
        exec {
            commandLine 'echo', "Backup file name: backups/${backupFileName}"
        }
        exec {
            commandLine 'scp', "backups/${backupFileName}", "root@185.201.28.190:/home/backups/${backupFileName}"
        }
        exec {
            commandLine 'ssh', 'root@185.201.28.190', "psql -U postgres -h localhost -f /home/backups/${backupFileName}"
        }
        exec {
            commandLine 'ssh', 'root@185.201.28.190', "rm /home/backups/${backupFileName}"
        }
    }
}

task logs {
    group 'vocabulary'
    doLast {
        exec {
            commandLine 'scp', 'root@185.201.28.190:/home/logs/app.log', 'prod/'
        }
    }
}
